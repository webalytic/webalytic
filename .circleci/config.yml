version: 2.1

parameters:
  # This parameter is used to trigger the main workflow
  trigger:
    type: boolean
    default: true

  # A parameter per package
  log-processing:
    type: boolean
    default: false

  log-collector:
    type: boolean
    default: false

  api-gateway:
    type: boolean
    default: false

  data-storage:
    type: boolean
    default: false

  geoip:
    type: boolean
    default: false

  dashboard:
    type: boolean
    default: false

  configuration:
    type: boolean
    default: false

  web-sdk:
    type: boolean
    default: false

executors:
  node:
    docker:
      - image: circleci/node:12

  node-machine: 
    machine:
      image: default

  buildpack: 
    docker:
      - image: circleci/buildpack-deps:stretch

jobs:
  trigger-workflows:
    executor: node
    steps:
      - checkout
      - run:
          name: Trigger workflows
          command: chmod +x .circleci/circle_trigger.sh && .circleci/circle_trigger.sh

  build-docker:
    parameters:
      package_name:
        type: string
    executor: buildpack
    working_directory: ~/project/src/<< parameters.package_name >>
    steps:
      - attach_workspace:
          at: ~/
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: docker build -t webalytic/<< parameters.package_name >>:latest .
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push webalytic/<< parameters.package_name >>:latest

  build:
    executor: node
    parameters:
      package_name:
        type: string
    working_directory: ~/project/src/<< parameters.package_name >>
    steps:
      - checkout:
          path: ~/project
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "./package.json" }}
          - v1-dependencies-
      - run: rm ../../package.json
      - run: cp ../../yarn.lock ./yarn.lock
      - run: yarn install
      - save_cache:
          paths:
            - ~/project/src/<< parameters.package_name >>/node_modules
            - ~/.cache/yarn
          key: v1-dependencies-{{ checksum "./package.json" }}
      - persist_to_workspace:
          root: ~/
          paths:
            - project

  lint:
    executor: node
    parameters:
      package_name:
        type: string
    working_directory: ~/project/src/<< parameters.package_name >>
    steps:
      - attach_workspace:
          at: ~/
      - run: yarn lint

  typescript:
    executor: node
    parameters:
      package_name:
        type: string
    working_directory: ~/project/src/<< parameters.package_name >>
    steps:
      - attach_workspace:
          at: ~/
      - run: yarn ts-check

  test:
    executor: node-machine
    parameters:
      package_name:
        type: string
    working_directory: ~/project/src/<< parameters.package_name >>
    steps:
      - attach_workspace:
          at: ~/
      - run:
          command: |
            export NVM_DIR="/opt/circleci/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
            nvm install v12.18.1 && nvm use v12.18.1 && nvm alias default v12.18.1
            npm run test
            
workflows:
  version: 2

  # The main workflow responsible for triggering all other workflows
  # in which changes are detected.
  ci:
    when: << pipeline.parameters.trigger >>
    jobs:
      - trigger-workflows


  # Workflows defined for each package.

  log-processing:
    when: << pipeline.parameters.log-processing >>
    jobs:
      - build:
          name: log-processing-build
          package_name: log-processing
      - lint:
          name: log-processing-lint
          package_name: log-processing
          requires:
            - log-processing-build
      - typescript:
          name: log-processing-typescript
          package_name: log-processing
          requires:
            - log-processing-build
      - test:
          name: log-processing-test
          package_name: log-processing
          requires:
            - log-processing-typescript
            - log-processing-lint
      - build-docker:
          name: log-processing-build-docker
          package_name: log-processing
          requires:
            - log-processing-test
          filters:
            branches:
              only: master

  log-collector:
    when: << pipeline.parameters.log-collector >>
    jobs:
      - build:
          name: log-collector-build
          package_name: log-collector
      - lint:
          name: log-collector-lint
          package_name: log-collector
          requires:
            - log-collector-build
      - typescript:  
          name: log-collector-typescript
          package_name: log-collector
          requires:
            - log-collector-build
      - test:
          name: log-collector-test
          package_name: log-collector
          requires:
            - log-collector-typescript
            - log-collector-lint
      - build-docker:
          name: log-collector-build-docker
          package_name: log-collector
          requires:
            - log-collector-test
          filters:
            branches:
              only: master

  api-gateway:
    when: << pipeline.parameters.api-gateway >>
    jobs:
      - build:
          name: api-gateway-build
          package_name: api-gateway
      - lint:
          name: api-gateway-lint
          package_name: api-gateway
          requires:
            - api-gateway-build
      - typescript:  
          name: api-gateway-typescript
          package_name: api-gateway
          requires:
            - api-gateway-build
      - test:
          name: api-gateway-test
          package_name: api-gateway
          requires:
            - api-gateway-typescript
            - api-gateway-lint
      - build-docker:
          name: api-gateway-build-docker
          package_name: api-gateway
          requires:
            - api-gateway-test
          filters:
            branches:
              only: master

  configuration:
    when: << pipeline.parameters.configuration >>
    jobs:
      - build:
          name: configuration-build
          package_name: configuration
      - lint:
          name: configuration-lint
          package_name: configuration
          requires:
            - configuration-build
      - typescript:  
          name: configuration-typescript
          package_name: configuration
          requires:
            - configuration-build
      - test:
          name: configuration-test
          package_name: configuration
          requires:
            - configuration-typescript
            - configuration-lint
      - build-docker:
          name: configuration-build-docker
          package_name: configuration
          requires:
            - configuration-test
          filters:
            branches:
              only: master
  
  data-storage:
    when: << pipeline.parameters.data-storage >>
    jobs:
      - build:
          name: data-storage-build
          package_name: data-storage
      - lint:
          name: data-storage-lint
          package_name: data-storage
          requires:
            - data-storage-build
      - typescript:  
          name: data-storage-typescript
          package_name: data-storage
          requires:
            - data-storage-build
      - test:
          name: data-storage-test
          package_name: data-storage
          requires:
            - data-storage-typescript
            - data-storage-lint
      - build-docker:
          name: data-storage-docker
          package_name: data-storage
          requires:
            - data-storage-test
          filters:
            branches:
              only: master

  dashboard:
    when: << pipeline.parameters.dashboard >>
    jobs:
      - build:
          name: dashboard-build
          package_name: dashboard
      - lint:
          name: dashboard-lint
          package_name: dashboard
          requires:
            - dashboard-build
      - build-docker:
          name: dashboard-docker
          package_name: dashboard
          requires:
            - dashboard-lint
          filters:
            branches:
              only: master

  web-sdk:
    when: << pipeline.parameters.web-sdk >>
    jobs:
      - build:
          name: web-sdk-build
          package_name: web-sdk
      - lint:
          name: web-sdk-lint
          package_name: web-sdk
          requires:
            - web-sdk-build
      - typescript:  
          name: web-sdk-typescript
          package_name: web-sdk
          requires:
            - web-sdk-build